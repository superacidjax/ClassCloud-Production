/- content_for :middle_content do
%table{:width => "50%"}
  %tr
    %td
      %b= @assignment.title
    %td{:align => "right"}
      - if current_user.is_teacher?
        = link_to "New", new_class_room_assignment_path(@class.id)
        | #{link_to "Edit", edit_class_room_assignment_path(@class.id, @assignment)} | #{link_to "Delete", class_room_assignment_path(@class.id, @assignment)}
  %tr
    %td{:colspan => "2"}
      From: #{user_full_name(@assignment.user)}
      - unless vote_count(@assignment.id).eql?(0) or current_user.is_teacher?
        = "(#{vote_count(@assignment.id)})"
  %tr
    %td{:colspan => "2"}
      Date: #{@assignment.created_at}
  %tr
    %td{:colspan => "2"}
      Category: #{@assignment.assignment_category.name rescue nil}
  %tr
    %td{:colspan => "2"}
      %hr{:noshade => ""}
  %tr
    %td{:colspan => "2"}
      = @assignment.description
  %tr
    %td{:colspan => "2"}
      %hr{:noshade => ""}
  %tr
    %td{:colspan => "3"}
      #comments_container
        - @assignment.comments.each do |comment|
          %table{:width => "100%"}
            %tr
              %td{:colspan => "3"}
                = "#{user_full_name(comment.user)}"
                - unless vote_count(comment.id).eql?(0) or current_user.is_teacher?
                  = "(#{vote_count(comment.id)})"
                  %br
                = "#{date_format(comment.created_at)}"
            %tr
              %td= comment.comment
              %td{:align => "right"}
                - if current_user.id.eql?(comment.user_id) or current_user.is_teacher?
                  = link_to "Edit", class_room_comment_edit_assignment_path(@class.id, @assignment, comment.id)
                  | #{link_to "Delete", class_room_comment_destroy_assignment_path(@class.id, @assignment, comment.id), :method => :delete}
                - unless vote_comment(comment).nil?
                  = 'Wee!!'
                - else
                  - unless current_user.is_observer?
                    = link_to 'Weee!!',class_room_comment_vote_path(@class.id ,@assignment.id,comment,:commentable_type =>"#{params[:controller]}")
                - if current_user.id.eql?(@assignment.user_id) and !current_user.id.eql?(comment.user_id) and comment.replies.count.eql?(0)
                  = link_to 'Reply', '#',:onclick => "$('.reply_#{comment.id}').show()"
                  %div{:class =>"reply_#{comment.id}", :style=> "display: none;"}
                    %h1=link_to 'x','#',:onclick => "$('.reply_#{comment.id}').hide()"
                    = form_tag(class_room_reply_comment_path(@class.id, comment.id), :multipart => true)   do |f|
                      .field
                        = text_area_tag "reply[body]", nil, :rows => 4, :cols => 40
                        = hidden_field_tag 'reply[user_id]',comment.user_id
                        = hidden_field_tag 'reply[replier_id]',current_user.id
                        = hidden_field_tag 'reply[comment_id]',comment.id
                        = hidden_field_tag 'comment_controller',"#{params[:controller]}"
                        = hidden_field_tag 'id',"#{params[:id]}"
                      .actions
                        = submit_tag "Add this Comment"
              - comment.replies.each do |reply|
                %tr
                  %td{:style =>"text-align:center;",:bgcolor=>'red'}
                    %h1="This is a reply: #{reply.body}"
              %tr
                %td{:colspan => "3"}
                  %hr{:noshade => ""}

            %tr
              %td{:colspan => "3"}
                %hr{:noshade => ""}
%h1 Leave a comment
= form_tag(class_room_comment_update_assignment_path(@class.id, @assignment, @comment.id), :method => :put) do |f|
  .field
    = text_area_tag "comment", @comment.comment, :rows => 4, :cols => 40
  .actions
    = submit_tag "Add this Comment"
    %span#assignment_comment_ajax_loader{:style => "display: none"}= image_tag "LoaderIcon.gif"