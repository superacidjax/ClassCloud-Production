%div
  .assignment_detail
    %h1
      %strong
        != @assignment.title
    %h5
      Posted #{distance_of_time_in_words(@assignment.created_at, Time.now)} ago..
    %br
    - if current_user.is_teacher?
      #{link_to image_tag('edit_button.png'), edit_class_room_assignment_path(@class.id, @assignment)} | #{link_to image_tag('delete_button.png'), class_room_assignment_path(@class.id, @assignment), :confirm => "Are you sure ?", :method => :delete}
    %br
    %h4
      Due on
      = @assignment.due_date().strftime("%A, %B %d.")
    %br
    %td
      Category: #{@assignment.assignment_category.name rescue nil}
    
    %br
    %br
    
      %hr
    %tr
      %td
        %p
          != @assignment.description
        - if @assignment.user_id.eql?(current_user.id) or current_user.is_teacher? and !@assignment.file_updated_at.nil?
          = link_to @assignment.file_file_name,download_class_room_assignment_path(@class.id, @assignment.id)
          | #{link_to 'remove',remove_file_class_room_assignment_path(@class.id, @assignment.id), :confirm => "Are you sure ?", :method => :put}

      %hr
    %tr
      %td{:colspan => "3"}
        #comments_container
          - @assignment.comments.each do |comment|
            %table
              %tr
                %td{:colspan => "3"}
                  = "#{user_full_name(comment.user)}"
                  - unless vote_count(comment.id).eql?(0) or current_user.is_teacher?
                    = "(#{vote_count(comment.id)})"
                  = "said on "
                  %br 
                  = "#{date_format(comment.created_at)}"
              %tr
                %td= comment.comment
                %td{:align => "right"}
                  - if current_user.id.eql?(comment.user_id)
                    = link_to "Edit", class_room_comment_edit_assignment_path(@class.id, @assignment, comment.id)
                  - if current_user.id.eql?(comment.user_id) or current_user.is_teacher?
                    = link_to "Delete", class_room_comment_destroy_assignment_path(@class.id, @assignment, comment.id), :method => :delete
                  - unless vote_comment(comment).nil?
                    = 'Weee!!'
                  - else
                    - unless current_user.is_observer?
                      = link_to 'Weee!!',class_room_comment_vote_path(@class.id ,@assignment.id,comment,:commentable_type =>"#{params[:controller]}")
                  - if current_user.id.eql?(@assignment.user_id) and !current_user.id.eql?(comment.user_id) and comment.replies.count.eql?(0)
                    = link_to 'Reply', '#',:onclick => "$('.reply_#{comment.id}').show()"
                    %div{:class =>"reply_#{comment.id}", :style=> "display: none;"}
                      %h1=link_to 'x','#',:onclick => "$('.reply_#{comment.id}').hide()"
                      = form_tag(class_room_reply_comment_path(@class.id, comment.id), :multipart => true)   do |f|
                        .field
                          = text_area_tag "reply[body]", nil, :rows => 4, :cols => 40
                          = hidden_field_tag 'reply[user_id]',comment.user_id
                          = hidden_field_tag 'reply[replier_id]',current_user.id
                          = hidden_field_tag 'reply[comment_id]',comment.id
                          = hidden_field_tag 'comment_controller',"#{params[:controller]}"
                          = hidden_field_tag 'id',"#{params[:id]}"
                        .actions
                          = submit_tag "Add this Comment"
                - comment.replies.each do |reply|
                  %tr
                    %td{:style =>"text-align:center;",:bgcolor=>'red'}
                      %h1="This is a reply: #{reply.body}"
                %tr
                  %td{:colspan => "3"}
                    %hr{:noshade => ""}

    - unless @current_user.is_observer?
      %h1 Leave a comment
      = form_tag(comment_create_class_room_assignment_path(@class.id, @assignment)) do |f|
        .field
          = text_area_tag "comment", nil, :rows => 4, :cols => 40
        .actions
          = submit_tag "Add this Comment"
          %span#assignment_comment_ajax_loader{:style => "display: none"}= image_tag "LoaderIcon.gif"

