.standard_text
  %h3
    Posted #{distance_of_time_in_words(@assignment.created_at, Time.now)} ago
  %br
    Category: #{@assignment.assignment_category.name rescue nil}
  %hr
    - if current_user.is_teacher?
      #{link_to 'Edit', edit_class_room_assignment_path(@class.id, @assignment)} | #{link_to 'Delete', class_room_assignment_path(@class.id, @assignment), :confirm => "Are you sure ?", :method => :delete}
    
    #user_content
      .user_titles
        %h1
          != @assignment.title
        %br
        %h2
          This is due on
          = @assignment.due_date().strftime("%A, %B %d.")
        %br
          - if current_user.is_student? and (@assignment.group_allowed? or !AssignmentStudent.where(user_id: current_user.id).first.blank?)

            = link_to image_tag('do_assignment_button.png'), new_class_room_assignment_writeboard_path(@class.id, @assignment)
          - if !current_user.is_observer?
            -unless vote_assignment(@assignment).nil?
              = image_tag('supercool_button_grey.png')
            -else
              = link_to image_tag('supercool_button.png'),vote_up_class_room_assignment_path(@class.id, @assignment)
      .textile
        %p
          != @assignment.description
        - if @assignment.user_id.eql?(current_user.id) or current_user.is_teacher? and !@assignment.file_updated_at.nil?
          = link_to @assignment.file_file_name,download_class_room_assignment_path(@class.id, @assignment.id)
          | #{link_to 'remove',remove_file_class_room_assignment_path(@class.id, @assignment.id), :confirm => "Are you sure ?", :method => :put}
   
  
    %br
    %hr
    %tr
    %td{:colspan => "3"}
      #comments_container
        %h1
          Comments
        %br
        - @assignment.comments.each do |comment|
          %table{:width => "100%"}
            %tr
              %h6{:colspan => "3"}
                = "#{user_full_name(comment.user)}"
                - unless vote_count(comment.id).eql?(0) or current_user.is_teacher?
                  = "(#{vote_count(comment.id)})"
                said this #{distance_of_time_in_words(comment.created_at, Time.now)} ago:
            %tr
            %br
            %h4
              = comment.comment
              %td{:align => "right"}
                %div{:id=>"comment"+comment.id.to_s}
                  - if current_user.id.eql?(comment.user_id)
                    = link_to "Edit", class_room_comment_edit_assignment_path(@class.id, @assignment, comment.id)
                  - if current_user.id.eql?(comment.user_id) or current_user.is_teacher?
                    = link_to "Delete", class_room_comment_destroy_assignment_path(@class.id, @assignment, comment.id), :method => :delete
                  - unless vote_comment(comment).nil?
                    = image_tag('supercool_button_grey.png')
                  - else
                    - unless current_user.is_observer?
                      = link_to image_tag('supercool_button.png'),class_room_comment_vote_path(@class.id ,@assignment.id,comment,:commentable_type =>"#{params[:controller]}")
                
                    /= link_to 'Reply', '#',:onclick => "$('.reply_#{comment.id}').show()"
                    %div{:class =>"reply_#{comment.id}", :style=> "display: none;"}
                      %h1=link_to 'x','#',:onclick => "$('.reply_#{comment.id}').hide()"
                      = form_tag(class_room_reply_comment_path(@class.id, comment.id), :multipart => true)   do |f|
                        .field
                          = text_area_tag "reply[body]", nil, :rows => 4, :cols => 40
                          = hidden_field_tag 'reply[user_id]',comment.user_id
                          = hidden_field_tag 'reply[replier_id]',current_user.id
                          = hidden_field_tag 'reply[comment_id]',comment.id
                          = hidden_field_tag 'comment_controller',"#{params[:controller]}"
                          = hidden_field_tag 'id',"#{params[:id]}"
                        .actions
                          = submit_tag "Add this Comment"
              - comment.replies.each do |reply|
                %br
                .comment_replies
                  %h6
                    = "#{user_full_name(current_user)}"
                    replied #{distance_of_time_in_words(reply.created_at, Time.now)} ago:
                  %h5
                    %h4
                      = "#{reply.body}"
                        
            %hr

  - unless @current_user.is_observer?
    %h1 Leave a comment
    = form_tag(comment_create_class_room_assignment_path(@class.id, @assignment)) do |f|
      .field
        = text_area_tag "comment", nil, :rows => 4, :cols => 40
      .actions
        = submit_tag "Add this Comment"
        %span#assignment_comment_ajax_loader{:style => "display: none"}= image_tag "LoaderIcon.gif"
